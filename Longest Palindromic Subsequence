class Solution{
  public:
    int dp[1001][1001];
    int lcs(string s, string t, int n, int m){
        
        if(n==0 ||m==0){
            return 0;
        }
        if(dp[n][m]!=-1){
            return dp[n][m];
        }
        if(s[n-1]==t[m-1]){
            return dp[n][m]=1+lcs(s,t,n-1,m-1);
        }
        else{
            return dp[n][m]=max(lcs(s,t,n,m-1),lcs(s,t,n-1,m));
        }
        
    }
    int longestPalinSubseq(string A) {
        //code here
        string B=string(A.rbegin(),A.rend());
        memset(dp,-1,sizeof(dp));
        int lenA=A.size();
        int lenB=B.size();
        int ans=lcs(A,B,lenA,lenB);
        return ans;
        
        
    }
};
