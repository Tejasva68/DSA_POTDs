first we will create a array naming freq which will contain frequency of all the characters which are given in the tasks array
then we will calculate the frequencies of each character and in the same loop we will find the element having highest freq and name the variable as maxfreq.
then we will see how many charcters are having freq equal to maxfreq ans will store it in variable maxchar
then we will use the formula(t=(k+1)*(maxfreq)+maxchar) to find the order of cooling and placing the tasks 
at last we will check if t is less than t or not 
if(N>t){
return N;
}
else return t;



class Solution {
  public:
    int leastInterval(int N, int K, vector<char> &tasks) {
        // code here
        int freq[26]={0};
        int maxfreq=0;
        for(int i=0;i<N;i++){
            freq[tasks[i]-'A']++;
            maxfreq=max(maxfreq,freq[tasks[i]-'A']);
        }
        int maxchar=0;
        for(int i=0;i<26;i++){
            if(freq[i]==maxfreq){
                maxchar++;
            }
        }
        int t=(maxfreq-1)*(K+1)+maxchar;
        int result=max(N,t);
        return result;
    }
};




source ::::     https://www.youtube.com/watch?v=8KlU5EbRI-0
